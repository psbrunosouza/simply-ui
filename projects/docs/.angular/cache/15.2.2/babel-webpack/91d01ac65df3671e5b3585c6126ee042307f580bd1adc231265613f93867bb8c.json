{"ast":null,"code":"'use strict';\n\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.object.define-property.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.function.name.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.array.includes.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.string.includes.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.array.sort.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.array.map.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.array.from.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.string.iterator.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.array.reduce.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.array.slice.js\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\nvar _markup = require('./lib/markup');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\nvar FRAGMENT_NODE = 11;\nvar ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\nvar testHasAttribute = function (val) {\n  try {\n    return typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n  } catch {\n    return false;\n  }\n};\nvar testNode = function (val) {\n  var constructorName = val.constructor.name;\n  var nodeType = val.nodeType,\n    tagName = val.tagName;\n  var isCustomElement = typeof tagName === 'string' && tagName.includes('-') || testHasAttribute(val);\n  return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === 'Text' || nodeType === COMMENT_NODE && constructorName === 'Comment' || nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment';\n};\nvar test = function (val) {\n  var _val$constructor;\n  return (val === null || val === void 0 ? void 0 : (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) && testNode(val);\n};\nexports.test = test;\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE;\n}\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE;\n}\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\nvar serialize = function (node, config, indentation, depth, refs, printer) {\n  if (nodeIsText(node)) {\n    return (0, _markup.printText)(node.data, config);\n  }\n  if (nodeIsComment(node)) {\n    return (0, _markup.printComment)(node.data, config);\n  }\n  var type = nodeIsFragment(node) ? 'DocumentFragment' : node.tagName.toLowerCase();\n  if (++depth > config.maxDepth) {\n    return (0, _markup.printElementAsLeaf)(type, config);\n  }\n  return (0, _markup.printElement)(type, (0, _markup.printProps)(nodeIsFragment(node) ? [] : Array.from(node.attributes).map(function (attr) {\n    return attr.name;\n  }).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce(function (props, attribute) {\n    props[attribute.name] = attribute.value;\n    return props;\n  }, {}), config, indentation + config.indent, depth, refs, printer), (0, _markup.printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\n};\nexports.serialize = serialize;\nvar plugin = {\n  serialize: serialize,\n  test: test\n};\nvar _default = plugin;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["require","Object","defineProperty","exports","value","test","serialize","default","_markup","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","FRAGMENT_NODE","ELEMENT_REGEXP","testHasAttribute","val","hasAttribute","testNode","constructorName","constructor","name","nodeType","tagName","isCustomElement","includes","_val$constructor","nodeIsText","node","nodeIsComment","nodeIsFragment","config","indentation","depth","refs","printer","printText","data","printComment","type","toLowerCase","maxDepth","printElementAsLeaf","printElement","printProps","Array","from","attributes","map","attr","sort","reduce","props","attribute","indent","printChildren","prototype","slice","call","childNodes","children","plugin","_default"],"sources":["/home/bruno/repos/libs/lib-y/node_modules/pretty-format/build/plugins/DOMElement.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\n\nvar _markup = require('./lib/markup');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n\nconst testHasAttribute = val => {\n  try {\n    return typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n  } catch {\n    return false;\n  }\n};\n\nconst testNode = val => {\n  const constructorName = val.constructor.name;\n  const {nodeType, tagName} = val;\n  const isCustomElement =\n    (typeof tagName === 'string' && tagName.includes('-')) ||\n    testHasAttribute(val);\n  return (\n    (nodeType === ELEMENT_NODE &&\n      (ELEMENT_REGEXP.test(constructorName) || isCustomElement)) ||\n    (nodeType === TEXT_NODE && constructorName === 'Text') ||\n    (nodeType === COMMENT_NODE && constructorName === 'Comment') ||\n    (nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment')\n  );\n};\n\nconst test = val => {\n  var _val$constructor;\n\n  return (\n    (val === null || val === void 0\n      ? void 0\n      : (_val$constructor = val.constructor) === null ||\n        _val$constructor === void 0\n      ? void 0\n      : _val$constructor.name) && testNode(val)\n  );\n};\n\nexports.test = test;\n\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE;\n}\n\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE;\n}\n\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\n\nconst serialize = (node, config, indentation, depth, refs, printer) => {\n  if (nodeIsText(node)) {\n    return (0, _markup.printText)(node.data, config);\n  }\n\n  if (nodeIsComment(node)) {\n    return (0, _markup.printComment)(node.data, config);\n  }\n\n  const type = nodeIsFragment(node)\n    ? 'DocumentFragment'\n    : node.tagName.toLowerCase();\n\n  if (++depth > config.maxDepth) {\n    return (0, _markup.printElementAsLeaf)(type, config);\n  }\n\n  return (0, _markup.printElement)(\n    type,\n    (0, _markup.printProps)(\n      nodeIsFragment(node)\n        ? []\n        : Array.from(node.attributes)\n            .map(attr => attr.name)\n            .sort(),\n      nodeIsFragment(node)\n        ? {}\n        : Array.from(node.attributes).reduce((props, attribute) => {\n            props[attribute.name] = attribute.value;\n            return props;\n          }, {}),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    (0, _markup.printChildren)(\n      Array.prototype.slice.call(node.childNodes || node.children),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    config,\n    indentation\n  );\n};\n\nexports.serialize = serialize;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}