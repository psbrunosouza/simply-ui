{"ast":null,"code":"\"use strict\";\n\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyboard = keyboard;\nexports.keyboardImplementationWrapper = keyboardImplementationWrapper;\nObject.defineProperty(exports, \"specialCharMap\", {\n  enumerable: true,\n  get: function () {\n    return _specialCharMap.specialCharMap;\n  }\n});\nvar _dom = require(\"@testing-library/dom\");\nvar _keyboardImplementation = require(\"./keyboardImplementation\");\nvar _keyMap = require(\"./keyMap\");\nvar _specialCharMap = require(\"./specialCharMap\");\nfunction keyboard(text, options) {\n  var _options$delay;\n  var _keyboardImplementati = keyboardImplementationWrapper(text, options),\n    promise = _keyboardImplementati.promise,\n    state = _keyboardImplementati.state;\n  if (((_options$delay = options == null ? void 0 : options.delay) != null ? _options$delay : 0) > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(function () {\n      return promise.then(function () {\n        return state;\n      });\n    });\n  } else {\n    // prevent users from dealing with UnhandledPromiseRejectionWarning in sync call\n    promise.catch(console.error);\n    return state;\n  }\n}\nfunction keyboardImplementationWrapper(text) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _config$keyboardState = config.keyboardState,\n    state = _config$keyboardState === void 0 ? createKeyboardState() : _config$keyboardState,\n    _config$delay = config.delay,\n    delay = _config$delay === void 0 ? 0 : _config$delay,\n    _config$document = config.document,\n    doc = _config$document === void 0 ? document : _config$document,\n    _config$autoModify = config.autoModify,\n    autoModify = _config$autoModify === void 0 ? false : _config$autoModify,\n    _config$keyboardMap = config.keyboardMap,\n    keyboardMap = _config$keyboardMap === void 0 ? _keyMap.defaultKeyMap : _config$keyboardMap;\n  var options = {\n    delay: delay,\n    document: doc,\n    autoModify: autoModify,\n    keyboardMap: keyboardMap\n  };\n  return {\n    promise: (0, _keyboardImplementation.keyboardImplementation)(text, options, state),\n    state: state,\n    releaseAllKeys: function () {\n      return (0, _keyboardImplementation.releaseAllKeys)(options, state);\n    }\n  };\n}\nfunction createKeyboardState() {\n  return {\n    activeElement: null,\n    pressed: [],\n    carryChar: '',\n    modifiers: {\n      alt: false,\n      caps: false,\n      ctrl: false,\n      meta: false,\n      shift: false\n    }\n  };\n}","map":{"version":3,"mappings":"AAAA,YAAY;;AAACA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,QAAQ,GAAGA,QAAQ;AAC3BF,OAAO,CAACG,6BAA6B,GAAGA,6BAA6B;AACrEL,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,gBAAgB,EAAE;EAC/CI,UAAU,EAAE,IAAI;EAChBC,GAAG,EAAE,YAAY;IACf,OAAOC,eAAe,CAACC,cAAc;EACvC;AACF,CAAC,CAAC;AAEF,IAAIC,IAAI,GAAGX,OAAO,CAAC,sBAAsB,CAAC;AAE1C,IAAIY,uBAAuB,GAAGZ,OAAO,CAAC,0BAA0B,CAAC;AAEjE,IAAIa,OAAO,GAAGb,OAAO,CAAC,UAAU,CAAC;AAEjC,IAAIS,eAAe,GAAGT,OAAO,CAAC,kBAAkB,CAAC;AAEjD,SAASK,QAAQA,CAACS,IAAI,EAAEC,OAAO,EAAE;EAC/B,IAAIC,cAAc;EAElB,4BAGIV,6BAA6B,CAACQ,IAAI,EAAEC,OAAO,CAAC;IAF9CE,OAAO,yBAAPA,OAAO;IACPC,KAAK,yBAALA,KAAK;EAGP,IAAI,CAAC,CAACF,cAAc,GAAGD,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,KAAK,KAAK,IAAI,GAAGH,cAAc,GAAG,CAAC,IAAI,CAAC,EAAE;IAClG,OAAO,CAAC,CAAC,EAAEL,IAAI,CAACS,SAAS,GAAG,CAACC,YAAY,CAAC;MAAA,OAAMJ,OAAO,CAACK,IAAI,CAAC;QAAA,OAAMJ,KAAK;MAAA,EAAC;IAAA,EAAC;EAC5E,CAAC,MAAM;IACL;IACAD,OAAO,CAACM,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IAC5B,OAAOP,KAAK;EACd;AACF;AAEA,SAASZ,6BAA6BA,CAACQ,IAAI,EAAe;EAAA,IAAbY,MAAM,uEAAG,CAAC,CAAC;EACtD,4BAMIA,MAAM,CALRC,aAAa;IAAET,KAAK,sCAAGU,mBAAmB,EAAE;IAAAC,gBAK1CH,MAAM,CAJRP,KAAK;IAALA,KAAK,8BAAG,CAAC;IAAAW,mBAIPJ,MAAM,CAHRK,QAAQ;IAAEC,GAAG,iCAAGD,QAAQ;IAAAE,qBAGtBP,MAAM,CAFRQ,UAAU;IAAVA,UAAU,mCAAG,KAAK;IAAAC,sBAEhBT,MAAM,CADRU,WAAW;IAAXA,WAAW,oCAAGvB,OAAO,CAACwB,aAAa;EAErC,IAAMtB,OAAO,GAAG;IACdI,KAAK,EAALA,KAAK;IACLY,QAAQ,EAAEC,GAAG;IACbE,UAAU,EAAVA,UAAU;IACVE,WAAW,EAAXA;EACF,CAAC;EACD,OAAO;IACLnB,OAAO,EAAE,CAAC,CAAC,EAAEL,uBAAuB,CAAC0B,sBAAsB,EAAExB,IAAI,EAAEC,OAAO,EAAEG,KAAK,CAAC;IAClFA,KAAK,EAALA,KAAK;IACLqB,cAAc,EAAE;MAAA,OAAM,CAAC,CAAC,EAAE3B,uBAAuB,CAAC2B,cAAc,EAAExB,OAAO,EAAEG,KAAK,CAAC;IAAA;EACnF,CAAC;AACH;AAEA,SAASU,mBAAmBA,GAAG;EAC7B,OAAO;IACLY,aAAa,EAAE,IAAI;IACnBC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE;MACTC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE;IACT;EACF,CAAC;AACH","names":["require","Object","defineProperty","exports","value","keyboard","keyboardImplementationWrapper","enumerable","get","_specialCharMap","specialCharMap","_dom","_keyboardImplementation","_keyMap","text","options","_options$delay","promise","state","delay","getConfig","asyncWrapper","then","catch","console","error","config","keyboardState","createKeyboardState","_config$delay","_config$document","document","doc","_config$autoModify","autoModify","_config$keyboardMap","keyboardMap","defaultKeyMap","keyboardImplementation","releaseAllKeys","activeElement","pressed","carryChar","modifiers","alt","caps","ctrl","meta","shift"],"sources":["/home/bruno/repos/libs/lib-y/node_modules/@testing-library/user-event/dist/keyboard/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyboard = keyboard;\nexports.keyboardImplementationWrapper = keyboardImplementationWrapper;\nObject.defineProperty(exports, \"specialCharMap\", {\n  enumerable: true,\n  get: function () {\n    return _specialCharMap.specialCharMap;\n  }\n});\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _keyboardImplementation = require(\"./keyboardImplementation\");\n\nvar _keyMap = require(\"./keyMap\");\n\nvar _specialCharMap = require(\"./specialCharMap\");\n\nfunction keyboard(text, options) {\n  var _options$delay;\n\n  const {\n    promise,\n    state\n  } = keyboardImplementationWrapper(text, options);\n\n  if (((_options$delay = options == null ? void 0 : options.delay) != null ? _options$delay : 0) > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(() => promise.then(() => state));\n  } else {\n    // prevent users from dealing with UnhandledPromiseRejectionWarning in sync call\n    promise.catch(console.error);\n    return state;\n  }\n}\n\nfunction keyboardImplementationWrapper(text, config = {}) {\n  const {\n    keyboardState: state = createKeyboardState(),\n    delay = 0,\n    document: doc = document,\n    autoModify = false,\n    keyboardMap = _keyMap.defaultKeyMap\n  } = config;\n  const options = {\n    delay,\n    document: doc,\n    autoModify,\n    keyboardMap\n  };\n  return {\n    promise: (0, _keyboardImplementation.keyboardImplementation)(text, options, state),\n    state,\n    releaseAllKeys: () => (0, _keyboardImplementation.releaseAllKeys)(options, state)\n  };\n}\n\nfunction createKeyboardState() {\n  return {\n    activeElement: null,\n    pressed: [],\n    carryChar: '',\n    modifiers: {\n      alt: false,\n      caps: false,\n      ctrl: false,\n      meta: false,\n      shift: false\n    }\n  };\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}