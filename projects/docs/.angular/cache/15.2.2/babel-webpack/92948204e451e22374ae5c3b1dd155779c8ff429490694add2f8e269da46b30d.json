{"ast":null,"code":"\"use strict\";\n\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasUnreliableEmptyValue = hasUnreliableEmptyValue;\nvar _isElementType = require(\"../misc/isElementType\");\nvar unreliableValueInputTypes;\n/**\n * Check if an empty IDL value on the element could mean a derivation of displayed value and IDL value\n */\n\n(function (unreliableValueInputTypes) {\n  unreliableValueInputTypes[\"number\"] = \"number\";\n})(unreliableValueInputTypes || (unreliableValueInputTypes = {}));\nfunction hasUnreliableEmptyValue(element) {\n  return (0, _isElementType.isElementType)(element, 'input') && Boolean(unreliableValueInputTypes[element.type]);\n}","map":{"version":3,"mappings":"AAAA,YAAY;;AAACA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,uBAAuB,GAAGA,uBAAuB;AAEzD,IAAIC,cAAc,GAAGN,OAAO,CAAC,uBAAuB,CAAC;AAErD,IAAIO,yBAAyB;AAC7B;AACA;AACA;;AAEA,CAAC,UAAUA,yBAAyB,EAAE;EACpCA,yBAAyB,CAAC,QAAQ,CAAC,GAAG,QAAQ;AAChD,CAAC,EAAEA,yBAAyB,KAAKA,yBAAyB,GAAG,CAAC,CAAC,CAAC,CAAC;AAEjE,SAASF,uBAAuBA,CAACG,OAAO,EAAE;EACxC,OAAO,CAAC,CAAC,EAAEF,cAAc,CAACG,aAAa,EAAED,OAAO,EAAE,OAAO,CAAC,IAAIE,OAAO,CAACH,yBAAyB,CAACC,OAAO,CAACG,IAAI,CAAC,CAAC;AAChH","names":["require","Object","defineProperty","exports","value","hasUnreliableEmptyValue","_isElementType","unreliableValueInputTypes","element","isElementType","Boolean","type"],"sources":["/home/bruno/repos/libs/lib-y/node_modules/@testing-library/user-event/dist/utils/edit/hasUnreliableEmptyValue.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasUnreliableEmptyValue = hasUnreliableEmptyValue;\n\nvar _isElementType = require(\"../misc/isElementType\");\n\nvar unreliableValueInputTypes;\n/**\n * Check if an empty IDL value on the element could mean a derivation of displayed value and IDL value\n */\n\n(function (unreliableValueInputTypes) {\n  unreliableValueInputTypes[\"number\"] = \"number\";\n})(unreliableValueInputTypes || (unreliableValueInputTypes = {}));\n\nfunction hasUnreliableEmptyValue(element) {\n  return (0, _isElementType.isElementType)(element, 'input') && Boolean(unreliableValueInputTypes[element.type]);\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}