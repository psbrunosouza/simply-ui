{"ast":null,"code":"\"use strict\";\n\nvar _excluded = [\"delay\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.object.define-property.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.object.assign.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.object.keys.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.array.index-of.js\");\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.symbol.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\nvar _dom = require(\"@testing-library/dom\");\nvar _typeImplementation = require(\"./typeImplementation\");\n\n// this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\nfunction type(element, text) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _ref$delay = _ref.delay,\n    delay = _ref$delay === void 0 ? 0 : _ref$delay,\n    options = _objectWithoutProperties(_ref, _excluded);\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  if (delay > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(function () {\n      return (0, _typeImplementation.typeImplementation)(element, text, Object.assign({\n        delay: delay\n      }, options));\n    });\n  } else {\n    return void (0, _typeImplementation.typeImplementation)(element, text, Object.assign({\n      delay: delay\n    }, options)) // prevents users from dealing with UnhandledPromiseRejectionWarning\n    .catch(console.error);\n  }\n}","map":{"version":3,"mappings":"AAAA,YAAY;;AAAC;AAAA;EAAA;EAAA;EAAA;EAAA;IAAA;IAAA;MAAAA;MAAA;MAAA;MAAAC;IAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAAD;IAAA;IAAAC;EAAA;EAAA;AAAA;AAAAC;AAAAA;AAAAA;AAAAA;AAAAA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,IAAI,GAAGA,IAAI;AAEnB,IAAIC,IAAI,GAAGN,OAAO,CAAC,sBAAsB,CAAC;AAE1C,IAAIO,mBAAmB,GAAGP,OAAO,CAAC,sBAAsB,CAAC;;AAEzD;AACA;AACA,SAASK,IAAIA,CAACG,OAAO,EAAEC,IAAI,EAGnB;EAAA,+EAAJ,CAAC,CAAC;EAAA,sBAFJC,KAAK;IAALA,KAAK,2BAAG,CAAC;IACNC,OAAO;EAEV;EACA;EACA;EACA,IAAID,KAAK,GAAG,CAAC,EAAE;IACb,OAAO,CAAC,CAAC,EAAEJ,IAAI,CAACM,SAAS,GAAG,CAACC,YAAY,CAAC;MAAA,OAAM,CAAC,CAAC,EAAEN,mBAAmB,CAACO,kBAAkB,EAAEN,OAAO,EAAEC,IAAI;QACvGC,KAAK,EAALA;MAAK,GACFC,OAAO,EACV;IAAA,EAAC;EACL,CAAC,MAAM;IACL,OAAO,KAAK,CAAC,CAAC,EAAEJ,mBAAmB,CAACO,kBAAkB,EAAEN,OAAO,EAAEC,IAAI;MACnEC,KAAK,EAALA;IAAK,GACFC,OAAO,EACV,CAAC;IAAA,CACFI,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACvB;AACF","names":["key","target","require","Object","defineProperty","exports","value","type","_dom","_typeImplementation","element","text","delay","options","getConfig","asyncWrapper","typeImplementation","catch","console","error"],"sources":["/home/bruno/repos/libs/lib-y/node_modules/@testing-library/user-event/dist/type/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _typeImplementation = require(\"./typeImplementation\");\n\n// this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\nfunction type(element, text, {\n  delay = 0,\n  ...options\n} = {}) {\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  if (delay > 0) {\n    return (0, _dom.getConfig)().asyncWrapper(() => (0, _typeImplementation.typeImplementation)(element, text, {\n      delay,\n      ...options\n    }));\n  } else {\n    return void (0, _typeImplementation.typeImplementation)(element, text, {\n      delay,\n      ...options\n    }) // prevents users from dealing with UnhandledPromiseRejectionWarning\n    .catch(console.error);\n  }\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}