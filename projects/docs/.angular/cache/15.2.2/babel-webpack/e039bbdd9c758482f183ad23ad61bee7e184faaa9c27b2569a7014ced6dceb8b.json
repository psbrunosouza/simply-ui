{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar regexExec = require('call-bind/callBound')('RegExp.prototype.exec');\nvar Call = require('./Call');\nvar Get = require('./Get');\nvar IsCallable = require('./IsCallable');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-regexpexec\n\nmodule.exports = function RegExpExec(R, S) {\n  if (Type(R) !== 'Object') {\n    throw new $TypeError('Assertion failed: `R` must be an Object');\n  }\n  if (Type(S) !== 'String') {\n    throw new $TypeError('Assertion failed: `S` must be a String');\n  }\n  var exec = Get(R, 'exec');\n  if (IsCallable(exec)) {\n    var result = Call(exec, R, [S]);\n    if (result === null || Type(result) === 'Object') {\n      return result;\n    }\n    throw new $TypeError('\"exec\" method must return `null` or an Object');\n  }\n  return regexExec(R, S);\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","regexExec","Call","Get","IsCallable","Type","module","exports","RegExpExec","R","S","exec","result"],"sources":["/home/bruno/repos/libs/lib-y/node_modules/es-abstract/2022/RegExpExec.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar regexExec = require('call-bind/callBound')('RegExp.prototype.exec');\n\nvar Call = require('./Call');\nvar Get = require('./Get');\nvar IsCallable = require('./IsCallable');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-regexpexec\n\nmodule.exports = function RegExpExec(R, S) {\n\tif (Type(R) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `R` must be an Object');\n\t}\n\tif (Type(S) !== 'String') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a String');\n\t}\n\tvar exec = Get(R, 'exec');\n\tif (IsCallable(exec)) {\n\t\tvar result = Call(exec, R, [S]);\n\t\tif (result === null || Type(result) === 'Object') {\n\t\t\treturn result;\n\t\t}\n\t\tthrow new $TypeError('\"exec\" method must return `null` or an Object');\n\t}\n\treturn regexExec(R, S);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAa,CAAC;AAE5C,IAAIG,SAAS,GAAGF,OAAO,CAAC,qBAAqB,CAAC,CAAC,uBAAuB,CAAC;AAEvE,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAII,GAAG,GAAGJ,OAAO,CAAC,OAAO,CAAC;AAC1B,IAAIK,UAAU,GAAGL,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIM,IAAI,GAAGN,OAAO,CAAC,QAAQ,CAAC;;AAE5B;;AAEAO,MAAM,CAACC,OAAO,GAAG,SAASC,UAAU,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC1C,IAAIL,IAAI,CAACI,CAAC,CAAC,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIT,UAAU,CAAC,yCAAyC,CAAC;EAChE;EACA,IAAIK,IAAI,CAACK,CAAC,CAAC,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIV,UAAU,CAAC,wCAAwC,CAAC;EAC/D;EACA,IAAIW,IAAI,GAAGR,GAAG,CAACM,CAAC,EAAE,MAAM,CAAC;EACzB,IAAIL,UAAU,CAACO,IAAI,CAAC,EAAE;IACrB,IAAIC,MAAM,GAAGV,IAAI,CAACS,IAAI,EAAEF,CAAC,EAAE,CAACC,CAAC,CAAC,CAAC;IAC/B,IAAIE,MAAM,KAAK,IAAI,IAAIP,IAAI,CAACO,MAAM,CAAC,KAAK,QAAQ,EAAE;MACjD,OAAOA,MAAM;IACd;IACA,MAAM,IAAIZ,UAAU,CAAC,+CAA+C,CAAC;EACtE;EACA,OAAOC,SAAS,CAACQ,CAAC,EAAEC,CAAC,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}