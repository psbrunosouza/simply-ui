{"ast":null,"code":"\"use strict\";\n\nrequire(\"/home/bruno/repos/libs/lib-y/node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateNewValue = calculateNewValue;\nvar _selectionRange = require(\"./selectionRange\");\nvar _getValue2 = require(\"./getValue\");\nvar _isValidDateValue = require(\"./isValidDateValue\");\nvar _isValidInputTimeValue = require(\"./isValidInputTimeValue\");\nfunction calculateNewValue(newEntry, element) {\n  var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n    var _getValue;\n    return (_getValue = (0, _getValue2.getValue)(element)) != null ? _getValue : /* istanbul ignore next */\n    '';\n  }();\n  var selectionRange = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : (0, _selectionRange.getSelectionRange)(element);\n  var deleteContent = arguments.length > 4 ? arguments[4] : undefined;\n  var selectionStart = selectionRange.selectionStart === null ? value.length : selectionRange.selectionStart;\n  var selectionEnd = selectionRange.selectionEnd === null ? value.length : selectionRange.selectionEnd;\n  var prologEnd = Math.max(0, selectionStart === selectionEnd && deleteContent === 'backward' ? selectionStart - 1 : selectionStart);\n  var prolog = value.substring(0, prologEnd);\n  var epilogStart = Math.min(value.length, selectionStart === selectionEnd && deleteContent === 'forward' ? selectionEnd + 1 : selectionEnd);\n  var epilog = value.substring(epilogStart, value.length);\n  var newValue = `${prolog}${newEntry}${epilog}`;\n  var newSelectionStart = prologEnd + newEntry.length;\n  if (element.type === 'date' && !(0, _isValidDateValue.isValidDateValue)(element, newValue)) {\n    newValue = value;\n  }\n  if (element.type === 'time' && !(0, _isValidInputTimeValue.isValidInputTimeValue)(element, newValue)) {\n    if ((0, _isValidInputTimeValue.isValidInputTimeValue)(element, newEntry)) {\n      newValue = newEntry;\n    } else {\n      newValue = value;\n    }\n  }\n  return {\n    newValue: newValue,\n    newSelectionStart: newSelectionStart\n  };\n}","map":{"version":3,"mappings":"AAAA,YAAY;;AAACA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB;AAE7C,IAAIC,eAAe,GAAGN,OAAO,CAAC,kBAAkB,CAAC;AAEjD,IAAIO,UAAU,GAAGP,OAAO,CAAC,YAAY,CAAC;AAEtC,IAAIQ,iBAAiB,GAAGR,OAAO,CAAC,oBAAoB,CAAC;AAErD,IAAIS,sBAAsB,GAAGT,OAAO,CAAC,yBAAyB,CAAC;AAE/D,SAASK,iBAAiBA,CAACK,QAAQ,EAAEC,OAAO,EAM2C;EAAA,IANzCP,KAAK,uEAAI,YAAM;IAC3D,IAAIQ,SAAS;IAEb,OAAO,CAACA,SAAS,GAAG,CAAC,CAAC,EAAEL,UAAU,CAACM,QAAQ,EAAEF,OAAO,CAAC,KAAK,IAAI,GAAGC,SAAS,GAC1E;IACA,EAAE;EACJ,CAAC,EAAG;EAAA,IAAEE,cAAc,uEAAG,CAAC,CAAC,EAAER,eAAe,CAACS,iBAAiB,EAAEJ,OAAO,CAAC;EAAA,IAAEK,aAAa;EACnF,IAAMC,cAAc,GAAGH,cAAc,CAACG,cAAc,KAAK,IAAI,GAAGb,KAAK,CAACc,MAAM,GAAGJ,cAAc,CAACG,cAAc;EAC5G,IAAME,YAAY,GAAGL,cAAc,CAACK,YAAY,KAAK,IAAI,GAAGf,KAAK,CAACc,MAAM,GAAGJ,cAAc,CAACK,YAAY;EACtG,IAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,cAAc,KAAKE,YAAY,IAAIH,aAAa,KAAK,UAAU,GAAGC,cAAc,GAAG,CAAC,GAAGA,cAAc,CAAC;EACpI,IAAMM,MAAM,GAAGnB,KAAK,CAACoB,SAAS,CAAC,CAAC,EAAEJ,SAAS,CAAC;EAC5C,IAAMK,WAAW,GAAGJ,IAAI,CAACK,GAAG,CAACtB,KAAK,CAACc,MAAM,EAAED,cAAc,KAAKE,YAAY,IAAIH,aAAa,KAAK,SAAS,GAAGG,YAAY,GAAG,CAAC,GAAGA,YAAY,CAAC;EAC5I,IAAMQ,MAAM,GAAGvB,KAAK,CAACoB,SAAS,CAACC,WAAW,EAAErB,KAAK,CAACc,MAAM,CAAC;EACzD,IAAIU,QAAQ,GAAI,GAAEL,MAAO,GAAEb,QAAS,GAAEiB,MAAO,EAAC;EAC9C,IAAME,iBAAiB,GAAGT,SAAS,GAAGV,QAAQ,CAACQ,MAAM;EAErD,IAAIP,OAAO,CAACmB,IAAI,KAAK,MAAM,IAAI,CAAC,CAAC,CAAC,EAAEtB,iBAAiB,CAACuB,gBAAgB,EAAEpB,OAAO,EAAEiB,QAAQ,CAAC,EAAE;IAC1FA,QAAQ,GAAGxB,KAAK;EAClB;EAEA,IAAIO,OAAO,CAACmB,IAAI,KAAK,MAAM,IAAI,CAAC,CAAC,CAAC,EAAErB,sBAAsB,CAACuB,qBAAqB,EAAErB,OAAO,EAAEiB,QAAQ,CAAC,EAAE;IACpG,IAAI,CAAC,CAAC,EAAEnB,sBAAsB,CAACuB,qBAAqB,EAAErB,OAAO,EAAED,QAAQ,CAAC,EAAE;MACxEkB,QAAQ,GAAGlB,QAAQ;IACrB,CAAC,MAAM;MACLkB,QAAQ,GAAGxB,KAAK;IAClB;EACF;EAEA,OAAO;IACLwB,QAAQ,EAARA,QAAQ;IACRC,iBAAiB,EAAjBA;EACF,CAAC;AACH","names":["require","Object","defineProperty","exports","value","calculateNewValue","_selectionRange","_getValue2","_isValidDateValue","_isValidInputTimeValue","newEntry","element","_getValue","getValue","selectionRange","getSelectionRange","deleteContent","selectionStart","length","selectionEnd","prologEnd","Math","max","prolog","substring","epilogStart","min","epilog","newValue","newSelectionStart","type","isValidDateValue","isValidInputTimeValue"],"sources":["/home/bruno/repos/libs/lib-y/node_modules/@testing-library/user-event/dist/utils/edit/calculateNewValue.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateNewValue = calculateNewValue;\n\nvar _selectionRange = require(\"./selectionRange\");\n\nvar _getValue2 = require(\"./getValue\");\n\nvar _isValidDateValue = require(\"./isValidDateValue\");\n\nvar _isValidInputTimeValue = require(\"./isValidInputTimeValue\");\n\nfunction calculateNewValue(newEntry, element, value = (() => {\n  var _getValue;\n\n  return (_getValue = (0, _getValue2.getValue)(element)) != null ? _getValue :\n  /* istanbul ignore next */\n  '';\n})(), selectionRange = (0, _selectionRange.getSelectionRange)(element), deleteContent) {\n  const selectionStart = selectionRange.selectionStart === null ? value.length : selectionRange.selectionStart;\n  const selectionEnd = selectionRange.selectionEnd === null ? value.length : selectionRange.selectionEnd;\n  const prologEnd = Math.max(0, selectionStart === selectionEnd && deleteContent === 'backward' ? selectionStart - 1 : selectionStart);\n  const prolog = value.substring(0, prologEnd);\n  const epilogStart = Math.min(value.length, selectionStart === selectionEnd && deleteContent === 'forward' ? selectionEnd + 1 : selectionEnd);\n  const epilog = value.substring(epilogStart, value.length);\n  let newValue = `${prolog}${newEntry}${epilog}`;\n  const newSelectionStart = prologEnd + newEntry.length;\n\n  if (element.type === 'date' && !(0, _isValidDateValue.isValidDateValue)(element, newValue)) {\n    newValue = value;\n  }\n\n  if (element.type === 'time' && !(0, _isValidInputTimeValue.isValidInputTimeValue)(element, newValue)) {\n    if ((0, _isValidInputTimeValue.isValidInputTimeValue)(element, newEntry)) {\n      newValue = newEntry;\n    } else {\n      newValue = value;\n    }\n  }\n\n  return {\n    newValue,\n    newSelectionStart\n  };\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}